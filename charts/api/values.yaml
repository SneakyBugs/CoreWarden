# Default values for api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

config:
  policies: |-
    p, alice, records, example.com., edit
    p, alice, records, example.com., read
  serviceAccounts:
    # alice:debug
    - id: alice
      secretHash: $2a$10$jjolj440dNTg3ZdgjXKJ2ODhE3zF6nWm.HVBTbD09OF75wrSWAQiy
  postgres:
    host: postgres-postgresql
    port: 5432
    user: change-me
    password: change-me
    database: postgres
    existingSecret:
      # Set name to use existing secret.
      # name: example-secret
      usernameKey: username
      passwordKey: password

replicaCount: 1

image:
  repository: ghcr.io/sneakybugs/corewarden-api
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  # capabilities:
  #   drop:
  #   - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

service:
  type: ClusterIP
  grpcPort: 6969
  httpPort: 6970

ingress:
  # host: chart-example.local
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

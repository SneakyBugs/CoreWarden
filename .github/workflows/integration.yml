name: Go

on: [push]

jobs:
  go-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
          args: --timeout=30m

  protoc-diff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install --yes protobuf-compiler
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.28
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2
      - name: Validate protoc diff
        run: |
          cd proto
          protoc --go_out=../api/resolver --go_opt=paths=source_relative --go-grpc_out=../api/resolver --go-grpc_opt=paths=source_relative resolver.proto
          protoc --go_out=../coredns/plugin/injector/resolver --go_opt=paths=source_relative --go-grpc_out=../coredns/plugin/injector/resolver --go-grpc_opt=paths=source_relative resolver.proto
          test -z "$(git status --short)"

  sqlc-diff:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Install Sqlc
        run: |
          wget -O /tmp/sqlc.tar.gz https://github.com/sqlc-dev/sqlc/releases/download/v1.24.0/sqlc_1.24.0_linux_amd64.tar.gz
          tar -xzf /tmp/sqlc.tar.gz
          mv sqlc /usr/local/bin
      - name: Validate Sqlc diff
        run: |
          cd api
          sqlc diff

  helm-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Lint Helm charts
        run: |
          go install golang.stackrox.io/kube-linter/cmd/kube-linter@v0.7.1
          cd charts
          helm lint --strict *
          kube-linter lint *

  test-unit:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16.3-alpine
        env:
          POSTGRES_DB: development
          POSTGRES_USER: development
          POSTGRES_PASSWORD: development
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Run unit tests
        env:
          POSTGRES_HOST: postgres
        run: go test ./...

  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install --yes dnsutils
      - name: Build CoreDNS
        run: |
          cd coredns
          make coredns
      - name: Run e2e test
        run: |
          cd coredns/test
          ./test.sh

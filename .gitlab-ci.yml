stages:
  - validate
  - deliver

lint:
  stage: validate
  image: golangci/golangci-lint:v1.55.2
  script:
    - cd coredns
    - golangci-lint run ./...

unit-test:
  stage: validate
  image: golang:1.21.4-bookworm
  script:
    - cd coredns
    # Use gotestsum to generate a JUnit-like report.
    # Pass options (after --) to make go test generate a coverage report.
    - go run gotest.tools/gotestsum@latest --junitfile report.xml --format testname
  artifacts:
    when: always
    reports:
      junit: backend/report.xml

e2e-test:
  stage: validate
  image: golang:1.21.4-bookworm
  script:
    - apt-get update
    - apt-get install --yes dnsutils
    - cd coredns
    - make coredns
    - cd test
    - ./test.sh

charts-lint:
  stage: validate
  image: docker.houseofkummer.com/homelab/dockops:0.6.0
  script:
    - cd charts
    - helm lint --strict *
    - kube-linter lint *

image-publish:
  stage: deliver
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR/coredns --dockerfile $CI_PROJECT_DIR/coredns/Dockerfile --destination $CI_REGISTRY_IMAGE/coredns:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - lint
    - unit-test
    - e2e-test
    - charts-lint

charts-publish:
  stage: deliver
  image: docker.houseofkummer.com/homelab/dockops:0.6.0
  script:
    - helm package charts/coredns
    - curl --request POST --form "chart=@$(ls coredns*.tgz)" --user "${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD}" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts"
  rules:
    - if: $CI_COMMIT_TAG
  needs:
    - lint
    - unit-test
    - e2e-test
    - charts-lint
    - image-publish
